/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@umijs";
exports.ids = ["vendor-chunks/@umijs"];
exports.modules = {

/***/ "(ssr)/./node_modules/@umijs/route-utils/es/getFlatMenus/getFlatMenus.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@umijs/route-utils/es/getFlatMenus/getFlatMenus.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getFlatMenus: () => (/* binding */ getFlatMenus)\n/* harmony export */ });\n/* harmony import */ var _transformRoute_transformRoute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../transformRoute/transformRoute */ \"(ssr)/./node_modules/@umijs/route-utils/es/transformRoute/transformRoute.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n/**\n * 获取打平的 menuData\n * 以 path 为 key\n * @param menuData\n */\n\nvar getFlatMenus = function getFlatMenus() {\n  var menuData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var menus = {};\n  menuData.forEach(function (mapItem) {\n    var item = _objectSpread({}, mapItem);\n\n    if (!item || !item.key) {\n      return;\n    }\n\n    if (!item.children && item[_transformRoute_transformRoute__WEBPACK_IMPORTED_MODULE_0__.childrenPropsName]) {\n      item.children = item[_transformRoute_transformRoute__WEBPACK_IMPORTED_MODULE_0__.childrenPropsName];\n      delete item[_transformRoute_transformRoute__WEBPACK_IMPORTED_MODULE_0__.childrenPropsName];\n    }\n\n    var routerChildren = item.children || [];\n    menus[(0,_transformRoute_transformRoute__WEBPACK_IMPORTED_MODULE_0__.stripQueryStringAndHashFromPath)(item.path || item.key || '/')] = _objectSpread({}, item);\n    menus[item.key || item.path || '/'] = _objectSpread({}, item);\n\n    if (routerChildren) {\n      menus = _objectSpread(_objectSpread({}, menus), getFlatMenus(routerChildren));\n    }\n  });\n  return menus;\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getFlatMenus);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVtaWpzL3JvdXRlLXV0aWxzL2VzL2dldEZsYXRNZW51cy9nZXRGbGF0TWVudXMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsMkNBQTJDLGdDQUFnQyxvQ0FBb0Msb0RBQW9ELDZEQUE2RCxpRUFBaUUsc0NBQXNDOztBQUV2VSxpQ0FBaUMsZ0JBQWdCLHNCQUFzQixPQUFPLHVEQUF1RCw2REFBNkQsNENBQTRDLG9LQUFvSyxtRkFBbUYsS0FBSzs7QUFFMWUsNENBQTRDLGtCQUFrQixrQ0FBa0Msb0VBQW9FLEtBQUssT0FBTyxvQkFBb0I7O0FBRTlGO0FBQ3RHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRU87QUFDUDtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7O0FBRS9CO0FBQ0E7QUFDQTs7QUFFQSwrQkFBK0IsNkVBQWlCO0FBQ2hELDJCQUEyQiw2RUFBaUI7QUFDNUMsa0JBQWtCLDZFQUFpQjtBQUNuQzs7QUFFQTtBQUNBLFVBQVUsK0ZBQStCLGtEQUFrRDtBQUMzRiwwREFBMEQ7O0FBRTFEO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQSxpRUFBZSxZQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGV0dHljb2RlLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B1bWlqcy9yb3V0ZS11dGlscy9lcy9nZXRGbGF0TWVudXMvZ2V0RmxhdE1lbnVzLmpzP2FiZTgiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGVudW1lcmFibGVPbmx5ICYmIChzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSkpLCBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH1cblxuZnVuY3Rpb24gX29iamVjdFNwcmVhZCh0YXJnZXQpIHsgZm9yICh2YXIgaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHsgdmFyIHNvdXJjZSA9IG51bGwgIT0gYXJndW1lbnRzW2ldID8gYXJndW1lbnRzW2ldIDoge307IGkgJSAyID8gb3duS2V5cyhPYmplY3Qoc291cmNlKSwgITApLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSkgOiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMoc291cmNlKSkgOiBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2RlZmluZVByb3BlcnR5KG9iaiwga2V5LCB2YWx1ZSkgeyBpZiAoa2V5IGluIG9iaikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHsgdmFsdWU6IHZhbHVlLCBlbnVtZXJhYmxlOiB0cnVlLCBjb25maWd1cmFibGU6IHRydWUsIHdyaXRhYmxlOiB0cnVlIH0pOyB9IGVsc2UgeyBvYmpba2V5XSA9IHZhbHVlOyB9IHJldHVybiBvYmo7IH1cblxuaW1wb3J0IHsgc3RyaXBRdWVyeVN0cmluZ0FuZEhhc2hGcm9tUGF0aCwgY2hpbGRyZW5Qcm9wc05hbWUgfSBmcm9tICcuLi90cmFuc2Zvcm1Sb3V0ZS90cmFuc2Zvcm1Sb3V0ZSc7XG4vKipcbiAqIOiOt+WPluaJk+W5s+eahCBtZW51RGF0YVxuICog5LulIHBhdGgg5Li6IGtleVxuICogQHBhcmFtIG1lbnVEYXRhXG4gKi9cblxuZXhwb3J0IHZhciBnZXRGbGF0TWVudXMgPSBmdW5jdGlvbiBnZXRGbGF0TWVudXMoKSB7XG4gIHZhciBtZW51RGF0YSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogW107XG4gIHZhciBtZW51cyA9IHt9O1xuICBtZW51RGF0YS5mb3JFYWNoKGZ1bmN0aW9uIChtYXBJdGVtKSB7XG4gICAgdmFyIGl0ZW0gPSBfb2JqZWN0U3ByZWFkKHt9LCBtYXBJdGVtKTtcblxuICAgIGlmICghaXRlbSB8fCAhaXRlbS5rZXkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIWl0ZW0uY2hpbGRyZW4gJiYgaXRlbVtjaGlsZHJlblByb3BzTmFtZV0pIHtcbiAgICAgIGl0ZW0uY2hpbGRyZW4gPSBpdGVtW2NoaWxkcmVuUHJvcHNOYW1lXTtcbiAgICAgIGRlbGV0ZSBpdGVtW2NoaWxkcmVuUHJvcHNOYW1lXTtcbiAgICB9XG5cbiAgICB2YXIgcm91dGVyQ2hpbGRyZW4gPSBpdGVtLmNoaWxkcmVuIHx8IFtdO1xuICAgIG1lbnVzW3N0cmlwUXVlcnlTdHJpbmdBbmRIYXNoRnJvbVBhdGgoaXRlbS5wYXRoIHx8IGl0ZW0ua2V5IHx8ICcvJyldID0gX29iamVjdFNwcmVhZCh7fSwgaXRlbSk7XG4gICAgbWVudXNbaXRlbS5rZXkgfHwgaXRlbS5wYXRoIHx8ICcvJ10gPSBfb2JqZWN0U3ByZWFkKHt9LCBpdGVtKTtcblxuICAgIGlmIChyb3V0ZXJDaGlsZHJlbikge1xuICAgICAgbWVudXMgPSBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1lbnVzKSwgZ2V0RmxhdE1lbnVzKHJvdXRlckNoaWxkcmVuKSk7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIG1lbnVzO1xufTtcbmV4cG9ydCBkZWZhdWx0IGdldEZsYXRNZW51czsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@umijs/route-utils/es/getFlatMenus/getFlatMenus.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@umijs/route-utils/es/getMatchMenu/getMatchMenu.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@umijs/route-utils/es/getMatchMenu/getMatchMenu.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getMatchMenu: () => (/* binding */ getMatchMenu),\n/* harmony export */   getMenuMatches: () => (/* binding */ getMenuMatches)\n/* harmony export */ });\n/* harmony import */ var _path_to_regexp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path-to-regexp */ \"(ssr)/./node_modules/@umijs/route-utils/es/path-to-regexp.js\");\n/* harmony import */ var _getFlatMenus_getFlatMenus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../getFlatMenus/getFlatMenus */ \"(ssr)/./node_modules/@umijs/route-utils/es/getFlatMenus/getFlatMenus.js\");\n/* harmony import */ var _transformRoute_transformRoute__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transformRoute/transformRoute */ \"(ssr)/./node_modules/@umijs/route-utils/es/transformRoute/transformRoute.js\");\n//@ts-ignore\n\n\n\nvar getMenuMatches = function getMenuMatches() {\n  var flatMenuKeys = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var path = arguments.length > 1 ? arguments[1] : undefined;\n  var exact = arguments.length > 2 ? arguments[2] : undefined;\n  return flatMenuKeys.filter(function (item) {\n    if (item === '/' && path === '/') {\n      return true;\n    }\n\n    if (item !== '/' && item !== '/*' && item && !(0,_transformRoute_transformRoute__WEBPACK_IMPORTED_MODULE_2__.isUrl)(item)) {\n      var pathKey = (0,_transformRoute_transformRoute__WEBPACK_IMPORTED_MODULE_2__.stripQueryStringAndHashFromPath)(item);\n\n      try {\n        // exact\n        if (exact) {\n          if ((0,_path_to_regexp__WEBPACK_IMPORTED_MODULE_0__.pathToRegexp)(\"\".concat(pathKey)).test(path)) {\n            return true;\n          }\n        } // /a\n\n\n        if ((0,_path_to_regexp__WEBPACK_IMPORTED_MODULE_0__.pathToRegexp)(\"\".concat(pathKey), []).test(path)) {\n          return true;\n        } // /a/b/b\n\n\n        if ((0,_path_to_regexp__WEBPACK_IMPORTED_MODULE_0__.pathToRegexp)(\"\".concat(pathKey, \"/(.*)\")).test(path)) {\n          return true;\n        }\n      } catch (error) {// console.log(error, path);\n      }\n    }\n\n    return false;\n  }).sort(function (a, b) {\n    // 如果完全匹配放到最后面\n    if (a === path) {\n      return 10;\n    }\n\n    if (b === path) {\n      return -10;\n    }\n\n    return a.substr(1).split('/').length - b.substr(1).split('/').length;\n  });\n};\n/**\n * 获取当前的选中菜单列表\n * @param pathname\n * @param menuData\n * @returns MenuDataItem[]\n */\n\nvar getMatchMenu = function getMatchMenu(pathname, menuData,\n/**\n * 要不要展示全部的 key\n */\nfullKeys, exact) {\n  var flatMenus = (0,_getFlatMenus_getFlatMenus__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(menuData);\n  var flatMenuKeys = Object.keys(flatMenus);\n  var menuPathKeys = getMenuMatches(flatMenuKeys, pathname || '/', exact);\n\n  if (!menuPathKeys || menuPathKeys.length < 1) {\n    return [];\n  }\n\n  if (!fullKeys) {\n    menuPathKeys = [menuPathKeys[menuPathKeys.length - 1]];\n  }\n\n  return menuPathKeys.map(function (menuPathKey) {\n    var menuItem = flatMenus[menuPathKey] || {\n      pro_layout_parentKeys: '',\n      key: ''\n    }; // 去重\n\n    var map = new Map();\n    var parentItems = (menuItem.pro_layout_parentKeys || []).map(function (key) {\n      if (map.has(key)) {\n        return null;\n      }\n\n      map.set(key, true);\n      return flatMenus[key];\n    }).filter(function (item) {\n      return item;\n    });\n\n    if (menuItem.key) {\n      parentItems.push(menuItem);\n    }\n\n    return parentItems;\n  }).flat(1);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getMatchMenu);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVtaWpzL3JvdXRlLXV0aWxzL2VzL2dldE1hdGNoTWVudS9nZXRNYXRjaE1lbnUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDaUQ7QUFDTTtBQUNtQztBQUNuRjtBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGtEQUFrRCxxRUFBSztBQUN2RCxvQkFBb0IsK0ZBQStCOztBQUVuRDtBQUNBO0FBQ0E7QUFDQSxjQUFjLDZEQUFZO0FBQzFCO0FBQ0E7QUFDQSxVQUFVOzs7QUFHVixZQUFZLDZEQUFZO0FBQ3hCO0FBQ0EsVUFBVTs7O0FBR1YsWUFBWSw2REFBWTtBQUN4QjtBQUNBO0FBQ0EsUUFBUSxlQUFlO0FBQ3ZCO0FBQ0E7O0FBRUE7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0VBQVc7QUFDN0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTzs7QUFFUDtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLOztBQUVMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7QUFDSDtBQUNBLGlFQUFlLFlBQVkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9sZXR0eWNvZGUtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvQHVtaWpzL3JvdXRlLXV0aWxzL2VzL2dldE1hdGNoTWVudS9nZXRNYXRjaE1lbnUuanM/N2FmOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvL0B0cy1pZ25vcmVcbmltcG9ydCB7IHBhdGhUb1JlZ2V4cCB9IGZyb20gJy4uL3BhdGgtdG8tcmVnZXhwJztcbmltcG9ydCBnZXRGbGF0TWVudSBmcm9tICcuLi9nZXRGbGF0TWVudXMvZ2V0RmxhdE1lbnVzJztcbmltcG9ydCB7IGlzVXJsLCBzdHJpcFF1ZXJ5U3RyaW5nQW5kSGFzaEZyb21QYXRoIH0gZnJvbSAnLi4vdHJhbnNmb3JtUm91dGUvdHJhbnNmb3JtUm91dGUnO1xuZXhwb3J0IHZhciBnZXRNZW51TWF0Y2hlcyA9IGZ1bmN0aW9uIGdldE1lbnVNYXRjaGVzKCkge1xuICB2YXIgZmxhdE1lbnVLZXlzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBbXTtcbiAgdmFyIHBhdGggPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcbiAgdmFyIGV4YWN0ID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQ7XG4gIHJldHVybiBmbGF0TWVudUtleXMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgaWYgKGl0ZW0gPT09ICcvJyAmJiBwYXRoID09PSAnLycpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGlmIChpdGVtICE9PSAnLycgJiYgaXRlbSAhPT0gJy8qJyAmJiBpdGVtICYmICFpc1VybChpdGVtKSkge1xuICAgICAgdmFyIHBhdGhLZXkgPSBzdHJpcFF1ZXJ5U3RyaW5nQW5kSGFzaEZyb21QYXRoKGl0ZW0pO1xuXG4gICAgICB0cnkge1xuICAgICAgICAvLyBleGFjdFxuICAgICAgICBpZiAoZXhhY3QpIHtcbiAgICAgICAgICBpZiAocGF0aFRvUmVnZXhwKFwiXCIuY29uY2F0KHBhdGhLZXkpKS50ZXN0KHBhdGgpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gLy8gL2FcblxuXG4gICAgICAgIGlmIChwYXRoVG9SZWdleHAoXCJcIi5jb25jYXQocGF0aEtleSksIFtdKS50ZXN0KHBhdGgpKSB7XG4gICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0gLy8gL2EvYi9iXG5cblxuICAgICAgICBpZiAocGF0aFRvUmVnZXhwKFwiXCIuY29uY2F0KHBhdGhLZXksIFwiLyguKilcIikpLnRlc3QocGF0aCkpIHtcbiAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHsvLyBjb25zb2xlLmxvZyhlcnJvciwgcGF0aCk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgcmV0dXJuIGZhbHNlO1xuICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgLy8g5aaC5p6c5a6M5YWo5Yy56YWN5pS+5Yiw5pyA5ZCO6Z2iXG4gICAgaWYgKGEgPT09IHBhdGgpIHtcbiAgICAgIHJldHVybiAxMDtcbiAgICB9XG5cbiAgICBpZiAoYiA9PT0gcGF0aCkge1xuICAgICAgcmV0dXJuIC0xMDtcbiAgICB9XG5cbiAgICByZXR1cm4gYS5zdWJzdHIoMSkuc3BsaXQoJy8nKS5sZW5ndGggLSBiLnN1YnN0cigxKS5zcGxpdCgnLycpLmxlbmd0aDtcbiAgfSk7XG59O1xuLyoqXG4gKiDojrflj5blvZPliY3nmoTpgInkuK3oj5zljZXliJfooahcbiAqIEBwYXJhbSBwYXRobmFtZVxuICogQHBhcmFtIG1lbnVEYXRhXG4gKiBAcmV0dXJucyBNZW51RGF0YUl0ZW1bXVxuICovXG5cbmV4cG9ydCB2YXIgZ2V0TWF0Y2hNZW51ID0gZnVuY3Rpb24gZ2V0TWF0Y2hNZW51KHBhdGhuYW1lLCBtZW51RGF0YSxcbi8qKlxuICog6KaB5LiN6KaB5bGV56S65YWo6YOo55qEIGtleVxuICovXG5mdWxsS2V5cywgZXhhY3QpIHtcbiAgdmFyIGZsYXRNZW51cyA9IGdldEZsYXRNZW51KG1lbnVEYXRhKTtcbiAgdmFyIGZsYXRNZW51S2V5cyA9IE9iamVjdC5rZXlzKGZsYXRNZW51cyk7XG4gIHZhciBtZW51UGF0aEtleXMgPSBnZXRNZW51TWF0Y2hlcyhmbGF0TWVudUtleXMsIHBhdGhuYW1lIHx8ICcvJywgZXhhY3QpO1xuXG4gIGlmICghbWVudVBhdGhLZXlzIHx8IG1lbnVQYXRoS2V5cy5sZW5ndGggPCAxKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9XG5cbiAgaWYgKCFmdWxsS2V5cykge1xuICAgIG1lbnVQYXRoS2V5cyA9IFttZW51UGF0aEtleXNbbWVudVBhdGhLZXlzLmxlbmd0aCAtIDFdXTtcbiAgfVxuXG4gIHJldHVybiBtZW51UGF0aEtleXMubWFwKGZ1bmN0aW9uIChtZW51UGF0aEtleSkge1xuICAgIHZhciBtZW51SXRlbSA9IGZsYXRNZW51c1ttZW51UGF0aEtleV0gfHwge1xuICAgICAgcHJvX2xheW91dF9wYXJlbnRLZXlzOiAnJyxcbiAgICAgIGtleTogJydcbiAgICB9OyAvLyDljrvph41cblxuICAgIHZhciBtYXAgPSBuZXcgTWFwKCk7XG4gICAgdmFyIHBhcmVudEl0ZW1zID0gKG1lbnVJdGVtLnByb19sYXlvdXRfcGFyZW50S2V5cyB8fCBbXSkubWFwKGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgIGlmIChtYXAuaGFzKGtleSkpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG5cbiAgICAgIG1hcC5zZXQoa2V5LCB0cnVlKTtcbiAgICAgIHJldHVybiBmbGF0TWVudXNba2V5XTtcbiAgICB9KS5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHJldHVybiBpdGVtO1xuICAgIH0pO1xuXG4gICAgaWYgKG1lbnVJdGVtLmtleSkge1xuICAgICAgcGFyZW50SXRlbXMucHVzaChtZW51SXRlbSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHBhcmVudEl0ZW1zO1xuICB9KS5mbGF0KDEpO1xufTtcbmV4cG9ydCBkZWZhdWx0IGdldE1hdGNoTWVudTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@umijs/route-utils/es/getMatchMenu/getMatchMenu.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@umijs/route-utils/es/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@umijs/route-utils/es/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getFlatMenus: () => (/* reexport safe */ _getFlatMenus_getFlatMenus__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   getMatchMenu: () => (/* reexport safe */ _getMatchMenu_getMatchMenu__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   transformRoute: () => (/* reexport safe */ _transformRoute_transformRoute__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _transformRoute_transformRoute__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transformRoute/transformRoute */ \"(ssr)/./node_modules/@umijs/route-utils/es/transformRoute/transformRoute.js\");\n/* harmony import */ var _getFlatMenus_getFlatMenus__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getFlatMenus/getFlatMenus */ \"(ssr)/./node_modules/@umijs/route-utils/es/getFlatMenus/getFlatMenus.js\");\n/* harmony import */ var _getMatchMenu_getMatchMenu__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./getMatchMenu/getMatchMenu */ \"(ssr)/./node_modules/@umijs/route-utils/es/getMatchMenu/getMatchMenu.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHVtaWpzL3JvdXRlLXV0aWxzL2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE0RTtBQUNOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbGV0dHljb2RlLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzL0B1bWlqcy9yb3V0ZS11dGlscy9lcy9pbmRleC5qcz9jZGI0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRlZmF1bHQgYXMgdHJhbnNmb3JtUm91dGUgfSBmcm9tICcuL3RyYW5zZm9ybVJvdXRlL3RyYW5zZm9ybVJvdXRlJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZ2V0RmxhdE1lbnVzIH0gZnJvbSAnLi9nZXRGbGF0TWVudXMvZ2V0RmxhdE1lbnVzJztcbmV4cG9ydCB7IGRlZmF1bHQgYXMgZ2V0TWF0Y2hNZW51IH0gZnJvbSAnLi9nZXRNYXRjaE1lbnUvZ2V0TWF0Y2hNZW51JzsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@umijs/route-utils/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@umijs/route-utils/es/path-to-regexp.js":
/*!**************************************************************!*\
  !*** ./node_modules/@umijs/route-utils/es/path-to-regexp.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.pathToRegexp = exports.tokensToRegexp = exports.regexpToFunction = exports.match = exports.tokensToFunction = exports.compile = exports.parse = void 0;\n/**\n * Tokenize input string.\n */\n\nfunction lexer(str) {\n  var tokens = [];\n  var i = 0;\n\n  while (i < str.length) {\n    var char = str[i];\n\n    if (char === '*' || char === '+' || char === '?') {\n      tokens.push({\n        type: 'MODIFIER',\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === '\\\\') {\n      tokens.push({\n        type: 'ESCAPED_CHAR',\n        index: i++,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === '{') {\n      tokens.push({\n        type: 'OPEN',\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === '}') {\n      tokens.push({\n        type: 'CLOSE',\n        index: i,\n        value: str[i++]\n      });\n      continue;\n    }\n\n    if (char === ':') {\n      var name = '';\n      var j = i + 1;\n\n      while (j < str.length) {\n        var code = str.charCodeAt(j);\n\n        if ( // `0-9`\n        code >= 48 && code <= 57 || // `A-Z`\n        code >= 65 && code <= 90 || // `a-z`\n        code >= 97 && code <= 122 || // `_`\n        code === 95) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError('Missing parameter name at ' + i);\n      tokens.push({\n        type: 'NAME',\n        index: i,\n        value: name\n      });\n      i = j;\n      continue;\n    }\n\n    if (char === '(') {\n      var count = 1;\n      var pattern = '';\n      var j = i + 1;\n\n      if (str[j] === '?') {\n        throw new TypeError('Pattern cannot start with \"?\" at ' + j);\n      }\n\n      while (j < str.length) {\n        if (str[j] === '\\\\') {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === ')') {\n          count--;\n\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === '(') {\n          count++;\n\n          if (str[j + 1] !== '?') {\n            throw new TypeError('Capturing groups are not allowed at ' + j);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError('Unbalanced pattern at ' + i);\n      if (!pattern) throw new TypeError('Missing pattern at ' + i);\n      tokens.push({\n        type: 'PATTERN',\n        index: i,\n        value: pattern\n      });\n      i = j;\n      continue;\n    }\n\n    tokens.push({\n      type: 'CHAR',\n      index: i,\n      value: str[i++]\n    });\n  }\n\n  tokens.push({\n    type: 'END',\n    index: i,\n    value: ''\n  });\n  return tokens;\n}\n/**\n * Parse a string for the raw tokens.\n */\n\n\nfunction parse(str, options) {\n  if (options === void 0) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  var tokens = lexer(str);\n  var _a = options.prefixes,\n      prefixes = _a === void 0 ? './' : _a;\n  var defaultPattern = '[^' + escapeString(options.delimiter || '/#?') + ']+?';\n  var result = [];\n  var key = 0;\n  var i = 0;\n  var path = '';\n\n  var tryConsume = function tryConsume(type) {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  var mustConsume = function mustConsume(type) {\n    var value = tryConsume(type);\n    if (value !== undefined) return value;\n    var _a = tokens[i],\n        nextType = _a.type,\n        index = _a.index;\n    throw new TypeError('Unexpected ' + nextType + ' at ' + index + ', expected ' + type);\n  };\n\n  var consumeText = function consumeText() {\n    var result = '';\n    var value; // tslint:disable-next-line\n\n    while (value = tryConsume('CHAR') || tryConsume('ESCAPED_CHAR')) {\n      result += value;\n    }\n\n    return result;\n  };\n\n  while (i < tokens.length) {\n    var char = tryConsume('CHAR');\n    var name = tryConsume('NAME');\n    var pattern = tryConsume('PATTERN');\n\n    if (name || pattern) {\n      var prefix = char || '';\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = '';\n      }\n\n      if (path) {\n        result.push(path);\n        path = '';\n      }\n\n      result.push({\n        name: name || key++,\n        prefix: prefix,\n        suffix: '',\n        pattern: pattern || defaultPattern,\n        modifier: tryConsume('MODIFIER') || ''\n      });\n      continue;\n    }\n\n    var value = char || tryConsume('ESCAPED_CHAR');\n\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = '';\n    }\n\n    var open = tryConsume('OPEN');\n\n    if (open) {\n      var prefix = consumeText();\n      var name_1 = tryConsume('NAME') || '';\n      var pattern_1 = tryConsume('PATTERN') || '';\n      var suffix = consumeText();\n      mustConsume('CLOSE');\n      result.push({\n        name: name_1 || (pattern_1 ? key++ : ''),\n        pattern: name_1 && !pattern_1 ? defaultPattern : pattern_1,\n        prefix: prefix,\n        suffix: suffix,\n        modifier: tryConsume('MODIFIER') || ''\n      });\n      continue;\n    }\n\n    mustConsume('END');\n  }\n\n  return result;\n}\n\nexports.parse = parse;\n/**\n * Compile a string to a template function for the path.\n */\n\nfunction compile(str, options) {\n  return tokensToFunction(parse(str, options), options);\n}\n\nexports.compile = compile;\n/**\n * Expose a method for transforming tokens into the path function.\n */\n\nfunction tokensToFunction(tokens, options) {\n  if (options === void 0) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  var reFlags = flags(options);\n  var _a = options.encode,\n      encode = _a === void 0 ? function (x) {\n    return x;\n  } : _a,\n      _b = options.validate,\n      validate = _b === void 0 ? true : _b; // Compile all the tokens into regexps.\n\n  var matches = tokens.map(function (token) {\n    if (_typeof(token) === 'object') {\n      return new RegExp('^(?:' + token.pattern + ')$', reFlags);\n    }\n  });\n  return function (data) {\n    var path = '';\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n        continue;\n      }\n\n      var value = data ? data[token.name] : undefined;\n      var optional = token.modifier === '?' || token.modifier === '*';\n      var repeat = token.modifier === '*' || token.modifier === '+';\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got an array');\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty');\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          var segment = encode(value[j], token);\n\n          if (validate && !matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"');\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === 'string' || typeof value === 'number') {\n        var segment = encode(String(value), token);\n\n        if (validate && !matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"');\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n      var typeOfMessage = repeat ? 'an array' : 'a string';\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + typeOfMessage);\n    }\n\n    return path;\n  };\n}\n\nexports.tokensToFunction = tokensToFunction;\n/**\n * Create path match function from `path-to-regexp` spec.\n */\n\nfunction match(str, options) {\n  var keys = [];\n  var re = pathToRegexp(str, keys, options);\n  return regexpToFunction(re, keys, options);\n}\n\nexports.match = match;\n/**\n * Create a path match function from `path-to-regexp` output.\n */\n\nfunction regexpToFunction(re, keys, options) {\n  if (options === void 0) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  var _a = options.decode,\n      decode = _a === void 0 ? function (x) {\n    return x;\n  } : _a;\n  return function (pathname) {\n    var m = re.exec(pathname);\n    if (!m) return false;\n    var path = m[0],\n        index = m.index;\n    var params = Object.create(null);\n\n    var _loop_1 = function _loop_1(i) {\n      // tslint:disable-next-line\n      if (m[i] === undefined) return 'continue';\n      var key = keys[i - 1];\n\n      if (key.modifier === '*' || key.modifier === '+') {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map(function (value) {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    };\n\n    for (var i = 1; i < m.length; i++) {\n      _loop_1(i);\n    }\n\n    return {\n      path: path,\n      index: index,\n      params: params\n    };\n  };\n}\n\nexports.regexpToFunction = regexpToFunction;\n/**\n * Escape a regular expression string.\n */\n\nfunction escapeString(str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1');\n}\n/**\n * Get the flags for a regexp from the options.\n */\n\n\nfunction flags(options) {\n  return options && options.sensitive ? '' : 'i';\n}\n/**\n * Pull out keys from a regexp.\n */\n\n\nfunction regexpToRegexp(path, keys) {\n  if (!keys) return path; // Use a negative lookahead to match only capturing groups.\n\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: '',\n        suffix: '',\n        modifier: '',\n        pattern: ''\n      });\n    }\n  }\n\n  return path;\n}\n/**\n * Transform an array into a regexp.\n */\n\n\nfunction arrayToRegexp(paths, keys, options) {\n  var parts = paths.map(function (path) {\n    return pathToRegexp(path, keys, options).source;\n  });\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options));\n}\n/**\n * Create a path regexp from string input.\n */\n\n\nfunction stringToRegexp(path, keys, options) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\n\n\nfunction tokensToRegexp(tokens, keys, options) {\n  if (options === void 0) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  var _a = options.strict,\n      strict = _a === void 0 ? false : _a,\n      _b = options.start,\n      start = _b === void 0 ? true : _b,\n      _c = options.end,\n      end = _c === void 0 ? true : _c,\n      _d = options.encode,\n      encode = _d === void 0 ? function (x) {\n    return x;\n  } : _d;\n  var endsWith = '[' + escapeString(options.endsWith || '') + ']|$';\n  var delimiter = '[' + escapeString(options.delimiter || '/#?') + ']';\n  var route = start ? '^' : ''; // Iterate over the tokens and create our regexp string.\n\n  for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n    var token = tokens_1[_i];\n\n    if (typeof token === 'string') {\n      route += escapeString(encode(token));\n    } else {\n      var prefix = escapeString(encode(token.prefix));\n      var suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === '+' || token.modifier === '*') {\n            var mod = token.modifier === '*' ? '?' : '';\n            route += '(?:' + prefix + '((?:' + token.pattern + ')(?:' + suffix + prefix + '(?:' + token.pattern + '))*)' + suffix + ')' + mod;\n          } else {\n            route += '(?:' + prefix + '(' + token.pattern + ')' + suffix + ')' + token.modifier;\n          }\n        } else {\n          route += '(' + token.pattern + ')' + token.modifier;\n        }\n      } else {\n        route += '(?:' + prefix + suffix + ')' + token.modifier;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += delimiter + '?';\n    route += !options.endsWith ? '$' : '(?=' + endsWith + ')';\n  } else {\n    var endToken = tokens[tokens.length - 1];\n    var isEndDelimited = typeof endToken === 'string' ? delimiter.indexOf(endToken[endToken.length - 1]) > -1 : // tslint:disable-next-line\n    endToken === undefined;\n\n    if (!strict) {\n      route += '(?:' + delimiter + '(?=' + endsWith + '))?';\n    }\n\n    if (!isEndDelimited) {\n      route += '(?=' + delimiter + '|' + endsWith + ')';\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\nexports.tokensToRegexp = tokensToRegexp;\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\n\nfunction pathToRegexp(path, keys, options) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n\nexports.pathToRegexp = pathToRegexp;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@umijs/route-utils/es/path-to-regexp.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@umijs/route-utils/es/sha265.js":
/*!******************************************************!*\
  !*** ./node_modules/@umijs/route-utils/es/sha265.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* eslint-disable no-redeclare */\n\n/* eslint-disable no-multi-assign */\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable no-return-assign */\n\n/* eslint-disable no-new-wrappers */\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/* eslint-disable no-var */\n\n/* eslint-disable no-plusplus */\n\n/* eslint-disable prefer-destructuring */\n\n/* eslint-disable @typescript-eslint/naming-convention */\n\n/* eslint-disable block-scoped-var */\n\n/* eslint-disable vars-on-top */\n\n/* eslint-disable no-bitwise */\n\n/* eslint-disable no-cond-assign */\n\n/*\n * A JavaScript implementation of the SHA256 hash function.\n *\n * FILE:\tsha256.js\n * VERSION:\t0.8\n * AUTHOR:\tChristoph Bichlmeier <informatik@zombiearena.de>\n *\n * NOTE: This version is not tested thoroughly!\n *\n * Copyright (c) 2003, Christoph Bichlmeier\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. Neither the name of the copyright holder nor the names of contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * ======================================================================\n *\n * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ''AS IS'' AND ANY EXPRESS\n * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHORS OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* SHA256 logical functions */\nfunction rotateRight(n, x) {\n  return x >>> n | x << 32 - n;\n}\n\nfunction choice(x, y, z) {\n  return x & y ^ ~x & z;\n}\n\nfunction majority(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n}\n\nfunction sha256_Sigma0(x) {\n  return rotateRight(2, x) ^ rotateRight(13, x) ^ rotateRight(22, x);\n}\n\nfunction sha256_Sigma1(x) {\n  return rotateRight(6, x) ^ rotateRight(11, x) ^ rotateRight(25, x);\n}\n\nfunction sha256_sigma0(x) {\n  return rotateRight(7, x) ^ rotateRight(18, x) ^ x >>> 3;\n}\n\nfunction sha256_sigma1(x) {\n  return rotateRight(17, x) ^ rotateRight(19, x) ^ x >>> 10;\n}\n\nfunction sha256_expand(W, j) {\n  return W[j & 0x0f] += sha256_sigma1(W[j + 14 & 0x0f]) + W[j + 9 & 0x0f] + sha256_sigma0(W[j + 1 & 0x0f]);\n}\n/* Hash constant words K: */\n\n\nvar K256 = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n/* global arrays */\n\nvar ihash;\nvar count;\nvar buffer;\nvar sha256_hex_digits = '0123456789abcdef';\n/* Add 32-bit integers with 16-bit operations (bug in some JS-interpreters:\noverflow) */\n\nfunction safe_add(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/* Initialise the SHA256 computation */\n\n\nfunction sha256_init() {\n  ihash = new Array(8);\n  count = new Array(2);\n  buffer = new Array(64);\n  count[0] = count[1] = 0;\n  ihash[0] = 0x6a09e667;\n  ihash[1] = 0xbb67ae85;\n  ihash[2] = 0x3c6ef372;\n  ihash[3] = 0xa54ff53a;\n  ihash[4] = 0x510e527f;\n  ihash[5] = 0x9b05688c;\n  ihash[6] = 0x1f83d9ab;\n  ihash[7] = 0x5be0cd19;\n}\n/* Transform a 512-bit message block */\n\n\nfunction sha256_transform() {\n  var a;\n  var b;\n  var c;\n  var d;\n  var e;\n  var f;\n  var g;\n  var h;\n  var T1;\n  var T2;\n  var W = new Array(16);\n  /* Initialize registers with the previous intermediate value */\n\n  a = ihash[0];\n  b = ihash[1];\n  c = ihash[2];\n  d = ihash[3];\n  e = ihash[4];\n  f = ihash[5];\n  g = ihash[6];\n  h = ihash[7];\n  /* make 32-bit words */\n\n  for (var i = 0; i < 16; i++) {\n    W[i] = buffer[(i << 2) + 3] | buffer[(i << 2) + 2] << 8 | buffer[(i << 2) + 1] << 16 | buffer[i << 2] << 24;\n  }\n\n  for (var j = 0; j < 64; j++) {\n    T1 = h + sha256_Sigma1(e) + choice(e, f, g) + K256[j];\n    if (j < 16) T1 += W[j];else T1 += sha256_expand(W, j);\n    T2 = sha256_Sigma0(a) + majority(a, b, c);\n    h = g;\n    g = f;\n    f = e;\n    e = safe_add(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = safe_add(T1, T2);\n  }\n  /* Compute the current intermediate hash value */\n\n\n  ihash[0] += a;\n  ihash[1] += b;\n  ihash[2] += c;\n  ihash[3] += d;\n  ihash[4] += e;\n  ihash[5] += f;\n  ihash[6] += g;\n  ihash[7] += h;\n}\n/* Read the next chunk of data and update the SHA256 computation */\n\n\nfunction sha256_update(data, inputLen) {\n  var i;\n  var index;\n  var curpos = 0;\n  /* Compute number of bytes mod 64 */\n\n  index = count[0] >> 3 & 0x3f;\n  var remainder = inputLen & 0x3f;\n  /* Update number of bits */\n\n  if ((count[0] += inputLen << 3) < inputLen << 3) count[1]++;\n  count[1] += inputLen >> 29;\n  /* Transform as many times as possible */\n\n  for (i = 0; i + 63 < inputLen; i += 64) {\n    for (var j = index; j < 64; j++) {\n      buffer[j] = data.charCodeAt(curpos++);\n    }\n\n    sha256_transform();\n    index = 0;\n  }\n  /* Buffer remaining input */\n\n\n  for (var _j = 0; _j < remainder; _j++) {\n    buffer[_j] = data.charCodeAt(curpos++);\n  }\n}\n/* Finish the computation by operations such as padding */\n\n\nfunction sha256_final() {\n  var index = count[0] >> 3 & 0x3f;\n  buffer[index++] = 0x80;\n\n  if (index <= 56) {\n    for (var i = index; i < 56; i++) {\n      buffer[i] = 0;\n    }\n  } else {\n    for (var _i = index; _i < 64; _i++) {\n      buffer[_i] = 0;\n    }\n\n    sha256_transform();\n\n    for (var _i2 = 0; _i2 < 56; _i2++) {\n      buffer[_i2] = 0;\n    }\n  }\n\n  buffer[56] = count[1] >>> 24 & 0xff;\n  buffer[57] = count[1] >>> 16 & 0xff;\n  buffer[58] = count[1] >>> 8 & 0xff;\n  buffer[59] = count[1] & 0xff;\n  buffer[60] = count[0] >>> 24 & 0xff;\n  buffer[61] = count[0] >>> 16 & 0xff;\n  buffer[62] = count[0] >>> 8 & 0xff;\n  buffer[63] = count[0] & 0xff;\n  sha256_transform();\n}\n/* Split the internal hash values into an array of bytes */\n\n\nfunction sha256_encode_bytes() {\n  var j = 0;\n  var output = new Array(32);\n\n  for (var i = 0; i < 8; i++) {\n    output[j++] = ihash[i] >>> 24 & 0xff;\n    output[j++] = ihash[i] >>> 16 & 0xff;\n    output[j++] = ihash[i] >>> 8 & 0xff;\n    output[j++] = ihash[i] & 0xff;\n  }\n\n  return output;\n}\n/* Get the internal hash as a hex string */\n\n\nfunction sha256_encode_hex() {\n  var output = new String();\n\n  for (var i = 0; i < 8; i++) {\n    for (var j = 28; j >= 0; j -= 4) {\n      output += sha256_hex_digits.charAt(ihash[i] >>> j & 0x0f);\n    }\n  }\n\n  return output;\n}\n/* Main function: returns a hex string representing the SHA256 value of the\ngiven data */\n\n\nfunction digest(data) {\n  sha256_init();\n  sha256_update(data, data.length);\n  sha256_final();\n  return sha256_encode_hex();\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (digest);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@umijs/route-utils/es/sha265.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@umijs/route-utils/es/transformRoute/transformRoute.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@umijs/route-utils/es/transformRoute/transformRoute.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   childrenPropsName: () => (/* binding */ childrenPropsName),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   getKeyByPath: () => (/* binding */ getKeyByPath),\n/* harmony export */   isUrl: () => (/* binding */ isUrl),\n/* harmony export */   stripQueryStringAndHashFromPath: () => (/* binding */ stripQueryStringAndHashFromPath)\n/* harmony export */ });\n/* harmony import */ var _path_to_regexp__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../path-to-regexp */ \"(ssr)/./node_modules/@umijs/route-utils/es/path-to-regexp.js\");\n/* harmony import */ var _sha265__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sha265 */ \"(ssr)/./node_modules/@umijs/route-utils/es/sha265.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nvar _excluded = [\"pro_layout_parentKeys\", \"children\", \"icon\", \"flatMenu\", \"indexRoute\", \"routes\"];\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n//@ts-ignore\n\n\nvar childrenPropsName = 'routes';\nfunction stripQueryStringAndHashFromPath(url) {\n  return url.split('?')[0].split('#')[0];\n}\nvar isUrl = function isUrl(path) {\n  if (!path.startsWith('http')) {\n    return false;\n  }\n\n  try {\n    var url = new URL(path);\n    return !!url;\n  } catch (error) {\n    return false;\n  }\n};\nvar getKeyByPath = function getKeyByPath(item) {\n  var path = item.path;\n\n  if (!path || path === '/') {\n    // 如果还是没有，用对象的hash 生成一个\n    try {\n      return \"/\".concat((0,_sha265__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(JSON.stringify(item)));\n    } catch (error) {// dom some thing\n    }\n  }\n\n  return path ? stripQueryStringAndHashFromPath(path) : path;\n};\n/**\n * 获取locale，增加了一个功能，如果 locale = false，将不使用国际化\n * @param item\n * @param parentName\n */\n\nvar getItemLocaleName = function getItemLocaleName(item, parentName) {\n  var name = item.name,\n      locale = item.locale; // 如果配置了 locale 并且 locale 为 false或 \"\"\n\n  if ('locale' in item && locale === false || !name) {\n    return false;\n  }\n\n  return item.locale || \"\".concat(parentName, \".\").concat(name);\n};\n/**\n * 如果不是 / 开头的和父节点做一下合并\n * 如果是 / 开头的不作任何处理\n * 如果是 url 也直接返回\n * @param path\n * @param parentPath\n */\n\n\nvar mergePath = function mergePath() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var parentPath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '/';\n\n  if (path.endsWith('/*')) {\n    return path.replace('/*', '/');\n  }\n\n  if ((path || parentPath).startsWith('/')) {\n    return path;\n  }\n\n  if (isUrl(path)) {\n    return path;\n  }\n\n  return \"/\".concat(parentPath, \"/\").concat(path).replace(/\\/\\//g, '/').replace(/\\/\\//g, '/');\n}; // bigfish 的兼容准话\n\n\nvar bigfishCompatibleConversions = function bigfishCompatibleConversions(route, props) {\n  var _route$menu = route.menu,\n      menu = _route$menu === void 0 ? {} : _route$menu,\n      indexRoute = route.indexRoute,\n      _route$path = route.path,\n      path = _route$path === void 0 ? '' : _route$path;\n  var routerChildren = route.children || [];\n  var _menu$name = menu.name,\n      name = _menu$name === void 0 ? route.name : _menu$name,\n      _menu$icon = menu.icon,\n      icon = _menu$icon === void 0 ? route.icon : _menu$icon,\n      _menu$hideChildren = menu.hideChildren,\n      hideChildren = _menu$hideChildren === void 0 ? route.hideChildren : _menu$hideChildren,\n      _menu$flatMenu = menu.flatMenu,\n      flatMenu = _menu$flatMenu === void 0 ? route.flatMenu : _menu$flatMenu; // 兼容平铺式写法\n  // 拼接 childrenRoutes, 处理存在 indexRoute 时的逻辑\n\n  var childrenList = indexRoute && // 如果只有 redirect,不用处理的\n  Object.keys(indexRoute).join(',') !== 'redirect' ? [_objectSpread({\n    path: path,\n    menu: menu\n  }, indexRoute)].concat(routerChildren || []) : routerChildren; // 拼接返回的 menu 数据\n\n  var result = _objectSpread({}, route);\n\n  if (name) {\n    result.name = name;\n  }\n\n  if (icon) {\n    result.icon = icon;\n  }\n\n  if (childrenList && childrenList.length) {\n    /** 在菜单中隐藏子项 */\n    if (hideChildren) {\n      delete result.children;\n      return result;\n    } // 需要重新进行一次\n\n\n    var finalChildren = formatter(_objectSpread(_objectSpread({}, props), {}, {\n      data: childrenList\n    }), route);\n    /** 在菜单中只隐藏此项，子项往上提，仍旧展示 */\n\n    if (flatMenu) {\n      return finalChildren;\n    }\n\n    delete result[childrenPropsName];\n  }\n\n  return result;\n};\n\nvar notNullArray = function notNullArray(value) {\n  return Array.isArray(value) && value.length > 0;\n};\n/**\n *\n * @param props\n * @param parent\n */\n\n\nfunction formatter(props) {\n  var parent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    path: '/'\n  };\n  var data = props.data,\n      formatMessage = props.formatMessage,\n      parentName = props.parentName,\n      menuLocale = props.locale;\n\n  if (!data || !Array.isArray(data)) {\n    return [];\n  }\n\n  return data.filter(function (item) {\n    if (!item) return false;\n    if (notNullArray(item.children)) return true;\n    if (item.path) return true;\n    if (item.originPath) return true;\n    if (item.layout) return true; // 重定向\n\n    if (item.redirect) return false;\n    if (item.unaccessible) return false;\n    return false;\n  }).filter(function (item) {\n    var _item$menu, _item$menu2;\n\n    if ((item === null || item === void 0 ? void 0 : (_item$menu = item.menu) === null || _item$menu === void 0 ? void 0 : _item$menu.name) || (item === null || item === void 0 ? void 0 : item.flatMenu) || (item === null || item === void 0 ? void 0 : (_item$menu2 = item.menu) === null || _item$menu2 === void 0 ? void 0 : _item$menu2.flatMenu)) {\n      return true;\n    } // 显示指定在 menu 中隐藏该项\n    // layout 插件的功能，其实不应该存在的\n\n\n    if (item.menu === false) {\n      return false;\n    }\n\n    return true;\n  }).map(function (finallyItem) {\n    var item = _objectSpread(_objectSpread({}, finallyItem), {}, {\n      path: finallyItem.path || finallyItem.originPath\n    });\n\n    if (!item.children && item[childrenPropsName]) {\n      item.children = item[childrenPropsName];\n      delete item[childrenPropsName];\n    } // 是否没有权限查看\n    // 这样就不会显示，是一个兼容性的方式\n\n\n    if (item.unaccessible) {\n      // eslint-disable-next-line no-param-reassign\n      delete item.name;\n    }\n\n    if (item.path === '*') {\n      item.path = '.';\n    }\n\n    if (item.path === '/*') {\n      item.path = '.';\n    }\n\n    if (!item.path && item.originPath) {\n      item.path = item.originPath;\n    }\n\n    return item;\n  }).map(function () {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      path: '/'\n    };\n    var routerChildren = item.children || item[childrenPropsName] || [];\n    var path = mergePath(item.path, parent ? parent.path : '/');\n    var name = item.name;\n    var locale = getItemLocaleName(item, parentName || 'menu'); // if enableMenuLocale use item.name,\n    // close menu international\n\n    var localeName = locale !== false && menuLocale !== false && formatMessage && locale ? formatMessage({\n      id: locale,\n      defaultMessage: name\n    }) : name;\n\n    var _parent$pro_layout_pa = parent.pro_layout_parentKeys,\n        pro_layout_parentKeys = _parent$pro_layout_pa === void 0 ? [] : _parent$pro_layout_pa,\n        children = parent.children,\n        icon = parent.icon,\n        flatMenu = parent.flatMenu,\n        indexRoute = parent.indexRoute,\n        routes = parent.routes,\n        restParent = _objectWithoutProperties(parent, _excluded);\n\n    var item_pro_layout_parentKeys = new Set([].concat(_toConsumableArray(pro_layout_parentKeys), _toConsumableArray(item.parentKeys || [])));\n\n    if (parent.key) {\n      item_pro_layout_parentKeys.add(parent.key);\n    }\n\n    var finallyItem = _objectSpread(_objectSpread(_objectSpread({}, restParent), {}, {\n      menu: undefined\n    }, item), {}, {\n      path: path,\n      locale: locale,\n      key: item.key || getKeyByPath(_objectSpread(_objectSpread({}, item), {}, {\n        path: path\n      })),\n      pro_layout_parentKeys: Array.from(item_pro_layout_parentKeys).filter(function (key) {\n        return key && key !== '/';\n      })\n    });\n\n    if (localeName) {\n      finallyItem.name = localeName;\n    } else {\n      delete finallyItem.name;\n    }\n\n    if (finallyItem.menu === undefined) {\n      delete finallyItem.menu;\n    }\n\n    if (notNullArray(routerChildren)) {\n      var formatterChildren = formatter(_objectSpread(_objectSpread({}, props), {}, {\n        data: routerChildren,\n        parentName: locale || ''\n      }), finallyItem);\n\n      if (notNullArray(formatterChildren)) {\n        finallyItem.children = formatterChildren;\n      }\n    }\n\n    return bigfishCompatibleConversions(finallyItem, props);\n  }).flat(1);\n}\n/**\n * 删除 hideInMenu 和 item.name 不存在的\n */\n\n\nvar defaultFilterMenuData = function defaultFilterMenuData() {\n  var menuData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return menuData.filter(function (item) {\n    return item && (item.name || notNullArray(item.children)) && !item.hideInMenu && !item.redirect;\n  }).map(function (item) {\n    var newItem = _objectSpread({}, item);\n\n    var routerChildren = newItem.children || item[childrenPropsName] || [];\n    delete newItem[childrenPropsName];\n\n    if (notNullArray(routerChildren) && !newItem.hideChildrenInMenu && routerChildren.some(function (child) {\n      return child && !!child.name;\n    })) {\n      var newChildren = defaultFilterMenuData(routerChildren);\n      if (newChildren.length) return _objectSpread(_objectSpread({}, newItem), {}, {\n        children: newChildren\n      });\n    }\n\n    return _objectSpread({}, item);\n  }).filter(function (item) {\n    return item;\n  });\n};\n/**\n * support pathToRegexp get string\n */\n\n\nvar RouteListMap = /*#__PURE__*/function (_Map) {\n  _inherits(RouteListMap, _Map);\n\n  var _super = _createSuper(RouteListMap);\n\n  function RouteListMap() {\n    _classCallCheck(this, RouteListMap);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RouteListMap, [{\n    key: \"get\",\n    value: function get(pathname) {\n      var routeValue;\n\n      try {\n        // eslint-disable-next-line no-restricted-syntax\n        var _iterator = _createForOfIteratorHelper(this.entries()),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _step$value = _slicedToArray(_step.value, 2),\n                key = _step$value[0],\n                value = _step$value[1];\n\n            var path = stripQueryStringAndHashFromPath(key);\n\n            if (!isUrl(key) && (0,_path_to_regexp__WEBPACK_IMPORTED_MODULE_0__.pathToRegexp)(path, []).test(pathname)) {\n              routeValue = value;\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      } catch (error) {\n        routeValue = undefined;\n      }\n\n      return routeValue;\n    }\n  }]);\n\n  return RouteListMap;\n}( /*#__PURE__*/_wrapNativeSuper(Map));\n/**\n * 获取面包屑映射\n * @param MenuDataItem[] menuData 菜单配置\n */\n\n\nvar getBreadcrumbNameMap = function getBreadcrumbNameMap(menuData) {\n  // Map is used to ensure the order of keys\n  var routerMap = new RouteListMap();\n\n  var flattenMenuData = function flattenMenuData(data, parent) {\n    data.forEach(function (menuItem) {\n      var routerChildren = menuItem.children || menuItem[childrenPropsName] || [];\n\n      if (notNullArray(routerChildren)) {\n        flattenMenuData(routerChildren, menuItem);\n      } // Reduce memory usage\n\n\n      var path = mergePath(menuItem.path, parent ? parent.path : '/');\n      routerMap.set(stripQueryStringAndHashFromPath(path), menuItem);\n    });\n  };\n\n  flattenMenuData(menuData);\n  return routerMap;\n};\n\nvar clearChildren = function clearChildren() {\n  var menuData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return menuData.map(function (item) {\n    var routerChildren = item.children || item[childrenPropsName];\n\n    if (notNullArray(routerChildren)) {\n      var newChildren = clearChildren(routerChildren);\n      if (newChildren.length) return _objectSpread({}, item);\n    }\n\n    var finallyItem = _objectSpread({}, item);\n\n    delete finallyItem[childrenPropsName];\n    delete finallyItem.children;\n    return finallyItem;\n  }).filter(function (item) {\n    return item;\n  });\n};\n/**\n * @param routeList 路由配置\n * @param locale 是否使用国际化\n * @param formatMessage 国际化的程序\n * @param ignoreFilter 是否筛选掉不展示的 menuItem 项，plugin-layout需要所有项目来计算布局样式\n * @returns { breadcrumb, menuData}\n */\n\n\nvar transformRoute = function transformRoute(routeList, locale, formatMessage, ignoreFilter) {\n  var originalMenuData = formatter({\n    data: routeList,\n    formatMessage: formatMessage,\n    locale: locale\n  });\n  var menuData = ignoreFilter ? clearChildren(originalMenuData) : defaultFilterMenuData(originalMenuData); // Map type used for internal logic\n\n  var breadcrumb = getBreadcrumbNameMap(originalMenuData);\n  return {\n    breadcrumb: breadcrumb,\n    menuData: menuData\n  };\n};\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (transformRoute);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@umijs/route-utils/es/transformRoute/transformRoute.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@umijs/use-params/es/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@umijs/use-params/es/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useUrlSearchParams: () => (/* binding */ useUrlSearchParams)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nvar __assign = (undefined && undefined.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n/* eslint-disable no-restricted-syntax */\r\n\r\n/**\r\n *\r\n * @param {object} params\r\n * @returns {URL}\r\n */\r\nfunction setQueryToCurrentUrl(params) {\r\n    var _a;\r\n    var URL = (typeof window !== 'undefined' ? window : {}).URL;\r\n    var url = new URL((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href);\r\n    Object.keys(params).forEach(function (key) {\r\n        var value = params[key];\r\n        if (value !== null && value !== undefined) {\r\n            if (Array.isArray(value)) {\r\n                url.searchParams.delete(key);\r\n                value.forEach(function (valueItem) {\r\n                    url.searchParams.append(key, valueItem);\r\n                });\r\n            }\r\n            else if (value instanceof Date) {\r\n                if (!Number.isNaN(value.getTime())) {\r\n                    url.searchParams.set(key, value.toISOString());\r\n                }\r\n            }\r\n            else if (typeof value === 'object') {\r\n                url.searchParams.set(key, JSON.stringify(value));\r\n            }\r\n            else {\r\n                url.searchParams.set(key, value);\r\n            }\r\n        }\r\n        else {\r\n            url.searchParams.delete(key);\r\n        }\r\n    });\r\n    return url;\r\n}\r\nfunction useUrlSearchParams(initial, config) {\r\n    var _a;\r\n    if (initial === void 0) { initial = {}; }\r\n    if (config === void 0) { config = { disabled: false }; }\r\n    /**\r\n     * The main idea of this hook is to make things response to change of `window.location.search`,\r\n     * so no need for introducing new state (in the mean time).\r\n     * Whenever `window.location.search` is changed but  not cause re-render, call `forceUpdate()`.\r\n     * Whenever the component - user of this hook - re-render, this hook should return\r\n     * the query object that corresponse to the current `window.location.search`\r\n     */\r\n    var _b = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), forceUpdate = _b[1];\r\n    var locationSearch = typeof window !== 'undefined' && ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.search);\r\n    /**\r\n     * @type {URLSearchParams}\r\n     */\r\n    var urlSearchParams = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\r\n        if (config.disabled)\r\n            return {};\r\n        return new URLSearchParams(locationSearch || {});\r\n    }, [config.disabled, locationSearch]);\r\n    var params = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function () {\r\n        if (config.disabled)\r\n            return {};\r\n        if (typeof window === 'undefined' || !window.URL)\r\n            return {};\r\n        var result = [];\r\n        // @ts-ignore\r\n        urlSearchParams.forEach(function (value, key) {\r\n            result.push({\r\n                key: key,\r\n                value: value,\r\n            });\r\n        });\r\n        // group by key\r\n        result = result.reduce(function (acc, val) {\r\n            (acc[val.key] = acc[val.key] || []).push(val);\r\n            return acc;\r\n        }, {});\r\n        result = Object.keys(result).map(function (key) {\r\n            var valueGroup = result[key];\r\n            if (valueGroup.length === 1) {\r\n                return [key, valueGroup[0].value];\r\n            }\r\n            return [key, valueGroup.map(function (_a) {\r\n                    var value = _a.value;\r\n                    return value;\r\n                })];\r\n        });\r\n        var newParams = __assign({}, initial);\r\n        result.forEach(function (_a) {\r\n            var key = _a[0], value = _a[1];\r\n            newParams[key] = parseValue(key, value, {}, initial);\r\n        });\r\n        return newParams;\r\n    }, [config.disabled, initial, urlSearchParams]);\r\n    function redirectToNewSearchParams(newParams) {\r\n        if (typeof window === 'undefined' || !window.URL)\r\n            return;\r\n        var url = setQueryToCurrentUrl(newParams);\r\n        if (window.location.search !== url.search) {\r\n            window.history.replaceState({}, '', url.toString());\r\n        }\r\n        if (urlSearchParams.toString() !== url.searchParams.toString()) {\r\n            forceUpdate({});\r\n        }\r\n    }\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\r\n        if (config.disabled)\r\n            return;\r\n        if (typeof window === 'undefined' || !window.URL)\r\n            return;\r\n        redirectToNewSearchParams(__assign(__assign({}, initial), params));\r\n    }, [config.disabled, params]);\r\n    var setParams = function (newParams) {\r\n        redirectToNewSearchParams(newParams);\r\n    };\r\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function () {\r\n        if (config.disabled)\r\n            return function () { };\r\n        if (typeof window === 'undefined' || !window.URL)\r\n            return function () { };\r\n        var onPopState = function () {\r\n            forceUpdate({});\r\n        };\r\n        window.addEventListener('popstate', onPopState);\r\n        return function () {\r\n            window.removeEventListener('popstate', onPopState);\r\n        };\r\n    }, [config.disabled]);\r\n    return [params, setParams];\r\n}\r\nvar booleanValues = {\r\n    true: true,\r\n    false: false,\r\n};\r\nfunction parseValue(key, _value, types, defaultParams) {\r\n    if (!types)\r\n        return _value;\r\n    var type = types[key];\r\n    var value = _value === undefined ? defaultParams[key] : _value;\r\n    if (type === Number) {\r\n        return Number(value);\r\n    }\r\n    if (type === Boolean || _value === 'true' || _value === 'false') {\r\n        return booleanValues[value];\r\n    }\r\n    if (Array.isArray(type)) {\r\n        // eslint-disable-next-line eqeqeq\r\n        return type.find(function (item) { return item == value; }) || defaultParams[key];\r\n    }\r\n    return value;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@umijs/use-params/es/index.js\n");

/***/ })

};
;